var J=Object.create;var G=Object.defineProperty;var Q=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var X=Object.getPrototypeOf,Y=Object.prototype.hasOwnProperty;var Z=(t,a)=>{for(var o in a)G(t,o,{get:a[o],enumerable:!0})},K=(t,a,o,u)=>{if(a&&typeof a=="object"||typeof a=="function")for(let d of V(a))!Y.call(t,d)&&d!==o&&G(t,d,{get:()=>a[d],enumerable:!(u=Q(a,d))||u.enumerable});return t};var S=(t,a,o)=>(o=t!=null?J(X(t)):{},K(a||!t||!t.__esModule?G(o,"default",{value:t,enumerable:!0}):o,t)),q=t=>K(G({},"__esModule",{value:!0}),t);var te={};Z(te,{activate:()=>ee});module.exports=q(te);var e=S(require("vscode")),z=S(require("path"));var y=S(require("vscode")),M=S(require("path")),U=require("child_process"),I=null;function O(t,a,o,u){let d=y.workspace.workspaceFolders;if(!d){y.window.showErrorMessage("No workspace folder open.");return}let P=d[0].uri.fsPath,i=y.workspace.getConfiguration("playwrightBdd"),h=i.get("enableFeatureGen",!0),b=i.get("configPath")||"./playwright.config.ts",w=i.get("tsconfigPath")||"",s=i.get("tags")||"",c=i.get("featureFolder","features"),n=i.get("featureGenCommand"),r=i.get("testCommand"),l=b,f=w?`${w}`:"",$=s?`--grep "${s}"`:"";if(n=n.replace("${configPath}",l).replace("${tsconfigArg}",f).replace("${tagsArg}",$),r=r.replace("${configPath}",l).replace("${tsconfigArg}",f).replace("${tagsArg}",$),o?.uri?.fsPath){let p=M.resolve(P,c),g=M.relative(p,o.uri.fsPath);if(r+=` "${g}"`,o.label&&o.parent){let m=o.label;r+=` --grep "${m}"`}}let v=(p,g,m)=>{u?.appendLine(`Running ${g}: ${p}`),I=(0,U.exec)(p,{cwd:P},(C,F,B)=>{if(I=null,C)u?.appendLine(`${g} failed:
${B}`),t?.appendOutput(B),o?t.failed(o,new y.TestMessage(B)):u?.appendLine("No valid test item to mark as failed.");else if(u?.appendLine(`${g} completed:
${F}`),t?.appendOutput(F),o?t.passed(o):u?.appendLine("No valid test item to mark as passed."),m){m();return}t?.end()})};h?v(n,"Feature generation",()=>{v(r,"BDD test run")}):v(r,"BDD test run")}function _(){I?(I.kill(),y.window.showInformationMessage("\u{1F6D1} BDD test execution terminated.")):y.window.showInformationMessage("No BDD test is currently running.")}var D=S(require("vscode")),E=class{constructor(a){this.enableFeatureGen=a}provideCodeLenses(a){let o=[],u=a.getText(),d=u.split(`
`),P=u.match(/^\s*Feature:\s*(.+)/m);if(P){let i=P[1].trim(),h=new D.Range(0,0,0,d[0].length);o.push(new D.CodeLens(h,{title:"\u25B6 Run Feature",command:"playwright-bdd.runScenarioDynamic",arguments:[i,this.enableFeatureGen]})),console.log(`[DEBUG] CodeLens featureName: ${i}`),o.push(new D.CodeLens(h,{title:"\u{1F41E} Debug Feature",command:"playwright-bdd.debugScenario",arguments:[i]}))}for(let i=0;i<d.length;i++){let h=d[i].match(/^\s*Scenario(?: Outline)?:\s*(.+)/);if(h){let b;for(let c=i-1;c>=0;c--){let n=d[c].match(/^\s*@(\w+)/);if(n){b=`@${n[1]}`;break}else{if(d[c].trim()==="")continue;break}}let w=new D.Range(i,0,i,d[i].length),s=b??h[1];o.push(new D.CodeLens(w,{title:"\u25B6 Run Scenario",command:"playwright-bdd.runScenarioDynamic",arguments:[s,this.enableFeatureGen]})),o.push(new D.CodeLens(w,{title:"\u{1F41E} Debug Scenario",command:"playwright-bdd.debugScenario",arguments:[s]}))}}return o}};async function ee(t){console.log("Playwright BDD extension activated");let a=e.tests.createTestController("playwrightBdd","Playwright BDD Tests");t.subscriptions.push(a);let o=e.window.createOutputChannel("Playwright BDD");t.subscriptions.push(o);let u=e.workspace.getConfiguration("playwrightBdd"),d=u.get("featureFolder","features"),P=u.get("enableFeatureGen",!1),i=async s=>{a.items.replace([]);let c=await e.workspace.findFiles(`${d}/**/*.feature`);for(let n of c){let r=(await e.workspace.fs.readFile(n)).toString(),l=r.split(`
`),f=r.match(/^\s*Feature:\s*(.+)/m),$=f?f[1].trim():z.basename(n.fsPath),v=n.fsPath,p=a.createTestItem(v,$,n);a.items.add(p);let g=null,m="";for(let C=0;C<l.length;C++){let F=l[C],B=F.match(/^\s*Scenario(?: Outline)?:\s*(.+)/);if(B){let A=B[1].trim();if(s&&!A.includes(s)&&!l[C-1]?.includes(s))continue;let L=`${n.fsPath}::${A}`,k=a.createTestItem(L,A,n);p.children.add(k),g=k,m=A}if(F.match(/^\s*Examples:/)&&g){let A=1,L=!1,k=[];for(let N=C+1;N<l.length;N++){let j=l[N].trim();if(j.startsWith("|")){let W=j.split("|").map(T=>T.trim()).filter(Boolean);if(!L){k=W,L=!0;continue}let H=Object.fromEntries(k.map((T,x)=>[T,W[x]])),R=m;for(let[T,x]of Object.entries(H))R=R.replace(new RegExp(`<${T}>`,"g"),x);if(console.log(g),g){let T=`${g.id}::${R}`,x=a.createTestItem(T,R,n);g.children.add(x)}A++}else if(j==="")break}}}}};await i(),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.runScenarioDynamic",(s,c)=>{let n=e.workspace.getConfiguration("playwrightBdd"),r=n.get("configPath")||"./playwright.config.ts",l=n.get("tsconfigPath")||"",f=r,$=l||"",v=s?`--grep "${s}"`:"",p=n.get("featureGenCommand")||"npx bddgen --config=${configPath}",g=n.get("testCommand")||"npx playwright test ${tsconfigArg} --config=${configPath} ${tagsArg}";p=p.replace("${configPath}",f).replace("${tsconfigArg}",$).replace("${tagsArg}",v),g=g.replace("${configPath}",f).replace("${tsconfigArg}",$).replace("${tagsArg}",v);let m=e.window.createTerminal("Playwright BDD");m.show(),c?m.sendText(`${p} && ${g}`):m.sendText(g)})),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.runScenario",s=>{let c=e.workspace.getConfiguration("playwrightBdd"),n=c.get("configPath")||"./playwright.config.ts",r=c.get("tsconfigPath")||"",l=r?`--project=${r}`:"",f=e.window.createTerminal("Playwright BDD");f.show(),f.sendText(`npx playwright test ${l} --config=${n} --grep "${s}"`)})),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.runScenarioWithFeatureGen",s=>{let c=e.workspace.getConfiguration("playwrightBdd"),n=c.get("configPath")||"./playwright.config.ts",r=c.get("tsconfigPath")||"",l=s||c.get("tags")||"",f=n,$=r||"",v=l?`--grep "${l}"`:"",p=c.get("featureGenCommand")||"npx bddgen --config=${configPath}",g=c.get("testCommand")||"npx playwright test ${tsconfigArg} --config=${configPath} ${tagsArg}";p=p.replace("${configPath}",f).replace("${tsconfigArg}",$).replace("${tagsArg}",v),g=g.replace("${configPath}",f).replace("${tsconfigArg}",$).replace("${tagsArg}",v);let m=e.window.createTerminal("Playwright BDD");m.show(),m.sendText(`${p} && ${g}`)}));let h=e.workspace.createFileSystemWatcher(`${d}/**/*.feature`);h.onDidCreate(()=>i()),h.onDidChange(()=>i()),h.onDidDelete(()=>i()),t.subscriptions.push(h),a.createRunProfile("Run",e.TestRunProfileKind.Run,(s,c)=>{let n=a.createTestRun(s);if(o.show(!0),s.include)for(let r of s.include)n.enqueued(r),n.started(r),O(n,a,r,o);else O(n,a,void 0,o)},!0),a.createRunProfile("Debug",e.TestRunProfileKind.Debug,(s,c)=>{let n=a.createTestRun(s);if(o.show(!0),s.include)for(let r of s.include)n.enqueued(r),n.started(r),e.commands.executeCommand("playwright-bdd.debugScenario",r.label);n.end()},!0),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.runTests",()=>{O(void 0,a,void 0,o)})),t.subscriptions.push(e.languages.registerCodeLensProvider({language:"feature",scheme:"file"},new E(P))),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.terminateTests",()=>{_()})),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.filterScenarios",async()=>{let s=await e.window.showInputBox({prompt:"Enter scenario name or tag to filter"});await i(s)})),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.refreshTests",async()=>{let s=e.window.createStatusBarItem(e.StatusBarAlignment.Left);s.text="$(sync~spin) Refreshing features...",s.tooltip="Playwright BDD is refreshing tests",s.show();try{await i()}finally{setTimeout(()=>{s.hide(),s.dispose()},3e3)}})),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.debugScenario",async s=>{let c=e.workspace.getConfiguration("playwrightBdd"),n=c.get("configPath")||"./playwright.config.ts",r=c.get("tsconfigPath")||"",l={type:"pwa-node",request:"launch",name:"Debug Playwright BDD Scenario",program:"${workspaceFolder}/node_modules/.bin/playwright",args:["test",r?`${r}`:"",`--config=${n}`,"--debug","--grep",s].filter(Boolean),console:"integratedTerminal",internalConsoleOptions:"neverOpen",cwd:"${workspaceFolder}",env:{PWDEBUG:"1"}};e.debug.startDebugging(void 0,l)}));let b=e.window.createStatusBarItem(e.StatusBarAlignment.Left);b.text="$(beaker) Run BDD Tests",b.command="playwright-bdd.runTests",b.tooltip="Run all Playwright BDD tests",b.show(),t.subscriptions.push(b);let w=e.window.createStatusBarItem(e.StatusBarAlignment.Left);w.text="$(debug-stop) Stop BDD Tests",w.command="playwright-bdd.terminateTests",w.tooltip="Terminate running Playwright BDD tests",w.show(),t.subscriptions.push(w)}0&&(module.exports={activate});
