var J=Object.create;var G=Object.defineProperty;var Q=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var X=Object.getPrototypeOf,Y=Object.prototype.hasOwnProperty;var Z=(t,r)=>{for(var s in r)G(t,s,{get:r[s],enumerable:!0})},K=(t,r,s,u)=>{if(r&&typeof r=="object"||typeof r=="function")for(let g of V(r))!Y.call(t,g)&&g!==s&&G(t,g,{get:()=>r[g],enumerable:!(u=Q(r,g))||u.enumerable});return t};var k=(t,r,s)=>(s=t!=null?J(X(t)):{},K(r||!t||!t.__esModule?G(s,"default",{value:t,enumerable:!0}):s,t)),q=t=>K(G({},"__esModule",{value:!0}),t);var te={};Z(te,{activate:()=>ee});module.exports=q(te);var e=k(require("vscode")),z=k(require("path"));var D=k(require("vscode")),I=k(require("path")),U=require("child_process"),M=null;function O(t,r,s,u){let g=D.workspace.workspaceFolders;if(!g){D.window.showErrorMessage("No workspace folder open.");return}let y=g[0].uri.fsPath,c=D.workspace.getConfiguration("playwrightBdd"),h=c.get("enableFeatureGen",!0),b=c.get("configPath")||"./playwright.config.ts",v=c.get("tsconfigPath")||"",n=c.get("tags")||"",o=c.get("featureFolder","features"),i=c.get("featureGenCommand"),a=c.get("testCommand"),f=b,m=v?`${v}`:"",$=n?`--grep "${n}"`:"";if(i=i.replace("${configPath}",f).replace("${tsconfigArg}",m).replace("${tagsArg}",$),a=a.replace("${configPath}",f).replace("${tsconfigArg}",m).replace("${tagsArg}",$),s?.uri?.fsPath){let d=I.resolve(y,o),l=I.relative(d,s.uri.fsPath);if(a+=` "${l}"`,s.label&&s.parent){let p=s.label;a+=` --grep "${p}"`}}let w=(d,l,p)=>{u?.appendLine(`Running ${l}: ${d}`),M=(0,U.exec)(d,{cwd:y},(x,T,S)=>{if(M=null,x)u?.appendLine(`${l} failed:
${S}`),t?.appendOutput(S),s?t.failed(s,new D.TestMessage(S)):u?.appendLine("No valid test item to mark as failed.");else if(u?.appendLine(`${l} completed:
${T}`),t?.appendOutput(T),s?t.passed(s):u?.appendLine("No valid test item to mark as passed."),p){p();return}t?.end()})};h?w(i,"Feature generation",()=>{w(a,"BDD test run")}):w(a,"BDD test run")}function _(){M?(M.kill(),D.window.showInformationMessage("\u{1F6D1} BDD test execution terminated.")):D.window.showInformationMessage("No BDD test is currently running.")}var P=k(require("vscode")),E=class{constructor(r){this.enableFeatureGen=r}provideCodeLenses(r){let s=[],u=r.getText(),g=u.split(`
`),y=u.match(/^\s*Feature:\s*(.+)/m);if(y){let c=y[1].trim(),h=new P.Range(0,0,0,g[0].length);s.push(new P.CodeLens(h,{title:"\u25B6 Run Feature",command:"playwright-bdd.runScenarioDynamic",arguments:[c,this.enableFeatureGen]})),console.log(`[DEBUG] CodeLens featureName: ${c}`),s.push(new P.CodeLens(h,{title:"\u{1F41E} Debug Feature",command:"playwright-bdd.debugScenario",arguments:[c]}))}for(let c=0;c<g.length;c++){let h=g[c].match(/^\s*Scenario(?: Outline)?:\s*(.+)/);if(h){let b;for(let o=c-1;o>=0;o--){let i=g[o].match(/^\s*@(\w+)/);if(i){b=`@${i[1]}`;break}else{if(g[o].trim()==="")continue;break}}let v=new P.Range(c,0,c,g[c].length),n=b??h[1];s.push(new P.CodeLens(v,{title:"\u25B6 Run Scenario",command:"playwright-bdd.runScenarioDynamic",arguments:[n,this.enableFeatureGen]})),s.push(new P.CodeLens(v,{title:"\u{1F41E} Debug Scenario",command:"playwright-bdd.debugScenario",arguments:[n]}))}}return s}};async function ee(t){console.log("Playwright BDD extension activated");let r=e.tests.createTestController("playwrightBdd","Playwright BDD Tests");t.subscriptions.push(r);let s=e.window.createOutputChannel("Playwright BDD");t.subscriptions.push(s);let u=e.workspace.getConfiguration("playwrightBdd"),g=u.get("featureFolder","features"),y=u.get("enableFeatureGen",!1),c=async()=>{r.items.replace([]);let n=await e.workspace.findFiles(`${g}/**/*.feature`);for(let o of n){let i=(await e.workspace.fs.readFile(o)).toString(),a=i.split(`
`),f=i.match(/^\s*Feature:\s*(.+)/m),m=f?f[1].trim():z.basename(o.fsPath),$=o.fsPath,w=r.createTestItem($,m,o);r.items.add(w);let d=null,l="";for(let p=0;p<a.length;p++){let x=a[p],T=x.match(/^\s*Scenario(?: Outline)?:\s*(.+)/);if(T){let B=T[1].trim(),L=`${o.fsPath}::${B}`,A=r.createTestItem(L,B,o);w.children.add(A),d=A,l=B}if(x.match(/^\s*Examples:/)&&d){let B=1,L=!1,A=[];for(let N=p+1;N<a.length;N++){let j=a[N].trim();if(j.startsWith("|")){let W=j.split("|").map(C=>C.trim()).filter(Boolean);if(!L){A=W,L=!0;continue}let H=Object.fromEntries(A.map((C,F)=>[C,W[F]])),R=l;for(let[C,F]of Object.entries(H))R=R.replace(new RegExp(`<${C}>`,"g"),F);if(d){let C=`${d.id}::${R}`,F=r.createTestItem(C,R,o);d.children.add(F)}B++}else if(j==="")break}}}}};await c(),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.runScenarioDynamic",(n,o)=>{let i=e.workspace.getConfiguration("playwrightBdd"),a=i.get("configPath")||"./playwright.config.ts",f=i.get("tsconfigPath")||"",m=a,$=f||"",w=n?`--grep "${n}"`:"",d=i.get("featureGenCommand")||"npx bddgen --config=${configPath}",l=i.get("testCommand")||"npx playwright test ${tsconfigArg} --config=${configPath} ${tagsArg}";d=d.replace("${configPath}",m).replace("${tsconfigArg}",$).replace("${tagsArg}",w),l=l.replace("${configPath}",m).replace("${tsconfigArg}",$).replace("${tagsArg}",w);let p=e.window.createTerminal("Playwright BDD");p.show(),o?p.sendText(`${d} && ${l}`):p.sendText(l)})),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.runScenario",n=>{let o=e.workspace.getConfiguration("playwrightBdd"),i=o.get("configPath")||"./playwright.config.ts",a=o.get("tsconfigPath")||"",f=a?`--project=${a}`:"",m=e.window.createTerminal("Playwright BDD");m.show(),m.sendText(`npx playwright test ${f} --config=${i} --grep "${n}"`)})),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.runScenarioWithFeatureGen",n=>{let o=e.workspace.getConfiguration("playwrightBdd"),i=o.get("configPath")||"./playwright.config.ts",a=o.get("tsconfigPath")||"",f=n||o.get("tags")||"",m=i,$=a||"",w=f?`--grep "${f}"`:"",d=o.get("featureGenCommand")||"npx bddgen --config=${configPath}",l=o.get("testCommand")||"npx playwright test ${tsconfigArg} --config=${configPath} ${tagsArg}";d=d.replace("${configPath}",m).replace("${tsconfigArg}",$).replace("${tagsArg}",w),l=l.replace("${configPath}",m).replace("${tsconfigArg}",$).replace("${tagsArg}",w);let p=e.window.createTerminal("Playwright BDD");p.show(),p.sendText(`${d} && ${l}`)}));let h=e.workspace.createFileSystemWatcher(`${g}/**/*.feature`);h.onDidCreate(()=>c()),h.onDidChange(()=>c()),h.onDidDelete(()=>c()),t.subscriptions.push(h),r.createRunProfile("Run",e.TestRunProfileKind.Run,(n,o)=>{let i=r.createTestRun(n);if(s.show(!0),n.include)for(let a of n.include)i.enqueued(a),i.started(a),O(i,r,a,s);else O(i,r,void 0,s)},!0),r.createRunProfile("Debug",e.TestRunProfileKind.Debug,(n,o)=>{let i=r.createTestRun(n);if(s.show(!0),n.include)for(let a of n.include)i.enqueued(a),i.started(a),e.commands.executeCommand("playwright-bdd.debugScenario",a.label);i.end()},!0),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.runTests",()=>{O(void 0,r,void 0,s)})),t.subscriptions.push(e.languages.registerCodeLensProvider({language:"feature",scheme:"file"},new E(y))),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.terminateTests",()=>{_()})),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.refreshTests",async()=>{let n=e.window.createStatusBarItem(e.StatusBarAlignment.Left);n.text="$(sync~spin) Refreshing features...",n.tooltip="Playwright BDD is refreshing tests",n.show();try{await c()}finally{setTimeout(()=>{n.hide(),n.dispose()},3e3)}})),t.subscriptions.push(e.commands.registerCommand("playwright-bdd.debugScenario",async n=>{let o=e.workspace.getConfiguration("playwrightBdd"),i=o.get("configPath")||"./playwright.config.ts",a=o.get("tsconfigPath")||"",f={type:"pwa-node",request:"launch",name:"Debug Playwright BDD Scenario",program:"${workspaceFolder}/node_modules/.bin/playwright",args:["test",a?`${a}`:"",`--config=${i}`,"--debug","--grep",n].filter(Boolean),console:"integratedTerminal",internalConsoleOptions:"neverOpen",cwd:"${workspaceFolder}",env:{PWDEBUG:"1"}};e.debug.startDebugging(void 0,f)}));let b=e.window.createStatusBarItem(e.StatusBarAlignment.Left);b.text="$(beaker) Run BDD Tests",b.command="playwright-bdd.runTests",b.tooltip="Run all Playwright BDD tests",b.show(),t.subscriptions.push(b);let v=e.window.createStatusBarItem(e.StatusBarAlignment.Left);v.text="$(debug-stop) Stop BDD Tests",v.command="playwright-bdd.terminateTests",v.tooltip="Terminate running Playwright BDD tests",v.show(),t.subscriptions.push(v)}0&&(module.exports={activate});
